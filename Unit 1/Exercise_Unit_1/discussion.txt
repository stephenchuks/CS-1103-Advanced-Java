Discussion:
This is really just a fairly easy exercise in using exceptions. 
The root() subroutine must be called in a try statement. 
There must be a catch clause to handle the IllegalArgumentException that might be thrown by the routine. 
The catch clause can simply print an error message:

try {
    solution = root(A,B,C);
    TextIO.putln("A solution of the equation is " + solution);
}
catch (IllegalArgumentException e) {
    TextIO.putln("Sorry, I can't find a solution.");
    TextIO.putln(e.getMessage());
}

Note that I've put the output statement that prints the solution inside the try statement. 
If an IllegalArgumentException is thrown by the subroutine, 
then this output statement will not be executed since the computer will jump immediately to the catch clause. You have to be careful about things like this. 
It wouldn't do to have the output statement after the try..catch statement since then the computer would still 
try to execute the output statement after handling an IllegalArgumentException. 
There are other ways to deal with this problem. For example, 
since the try..catch statement occurs in a while loop, we could put a continue statement in the catch clause to abort further processing when an exception occurs:

try {
    solution = root(A,B,C);
}
catch (IllegalArgumentException e) {
    TextIO.putln("Sorry, I can't find a solution.");
    TextIO.putln(e.getMessage());
    continue; // jump back to start of the while loop.
}

/* We only get to this point if NO exception was thrown.
    So we know that the solution was computed successfully. */

TextIO.putln("A solution of the equation is " + solution);

The rest of the main program is pretty standard. A complete solution is shown in the Quadratic Class
